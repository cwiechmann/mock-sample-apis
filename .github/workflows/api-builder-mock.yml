name: API-Builder API-Mock up

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release: 
    types: [ published ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run npm ci, npm test
      env:
        LOG_LEVEL: INFO
        CI: true
      run: | 
        npm ci
        npm run build --if-present
        npm test
  publish-docker-image:
    name: Publish Docker-Image
    if: github.event.action == 'published'
    needs: build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Publish Docker image
      uses: elgohr/Publish-Docker-Github-Action@2.13
      with:
        name: cwiechmann/api-mockup
        workdir: ${{env.workingDirectory}}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        snapshot: true
  release-helm-chart:
    name: Release Helm chart
    needs: publish-docker-image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create packaged Helm-Chart
      run: helm package ./helm --dependency-update --app-version ${{ github.event.release.tag_name }} --version ${{ github.event.release.tag_name }}
    - name: upload-helm-chart
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: mocked-apis-${{ github.event.release.tag_name }}.tgz
        asset_name: helm-chart-mocked-apis-${{ github.event.release.tag_name }}.tgz
        asset_content_type: application/gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}