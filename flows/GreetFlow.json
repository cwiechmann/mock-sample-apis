{
	"schemaVersion": "4",
	"info": {
		"name": "Greet flow",
		"description": "Greets a user",
		"author": "support@axway.com",
		"license": "ISC"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint.",
				"properties": {
					"username": {
						"type": "string",
						"description": "The username"
					}
				},
				"additionalProperties": false,
				"required": [
					"username"
				]
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "mock-utils.1",
	"nodes": {
		"response.success": {
			"type": "nodehandler://axway-flow/http",
			"name": "Success (HTTP 200)",
			"method": "setresponse",
			"parameters": [
				{
					"name": "body",
					"value": "$.greeting",
					"metaName": "Body",
					"metaDescription": "The response payload"
				},
				{
					"name": "status",
					"type": "jsonpath",
					"value": "$.returnCode",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"response.error": {
			"type": "nodehandler://axway-flow/http",
			"name": "Bad Request (HTTP 400)",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"value": "400",
					"type": "number",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"mustache.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-mustache/mustache",
			"name": "Format string",
			"method": "format",
			"parameters": [
				{
					"name": "template",
					"type": "string",
					"value": "\"{{data.config.helloworld.salutation}} {{data.params.username}}\"",
					"metaName": "Template",
					"metaDescription": "The Mustache template. e.g. `Hi {{data.user}}`."
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to assign to the \"data\" variable in the template."
				}
			],
			"outputs": {
				"next": {
					"context": "$.greeting",
					"routes": [
						"response.success"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"response.error"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Check Username",
			"method": "exists",
			"parameters": [
				{
					"name": "source",
					"value": "$.params.username",
					"metaName": "Source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"context": "$.exists",
					"routes": [
						"mustache.1"
					],
					"metaName": "True"
				},
				"false": {
					"context": "$.exists",
					"routes": [
						"response.error"
					],
					"metaName": "False"
				}
			},
			"metaMethod": "Exists"
		},
		"mock-utils.1": {
			"type": "nodehandler://api-builder-plugin-mock-utils/mock-utils",
			"name": "Random time",
			"method": "randomNumber",
			"parameters": [
				{
					"name": "inputTimes",
					"type": "array",
					"value": "[\n  {\"range\": \"10-30\", \"priority\": \"10\"}, \n  {\"range\": \"40-80\", \"priority\": \"9\"},\n  {\"range\": \"90-140\", \"priority\": \"8\"},\n  {\"range\": \"140-200\", \"priority\": \"7\"},\n  {\"range\": \"200-800\", \"priority\": \"6\"},\n  {\"range\": \"800-1400\", \"priority\": \"2\"},\n  {\"range\": \"800-9000\", \"priority\": \"2\"}\n]",
					"metaName": "Input Times",
					"metaDescription": "An array of possible time ranges (e.g. [{\"range\": \"10-30\", \"priority\": \"10\"}, {\"range\": \"40-80\", \"priority\": \"5\"}, ...]). Time ranges given first are returned more frequently."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"delay.1"
					],
					"context": "$.randomTime",
					"metaName": "Next"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Random time"
		},
		"delay.1": {
			"type": "nodehandler://axway-flow/delay",
			"name": "Delay",
			"method": "delay",
			"parameters": [
				{
					"name": "delay",
					"type": "jsonpath",
					"value": "$.randomTime",
					"metaName": "Delay",
					"metaDescription": "The length of delay, in milliseconds."
				}
			],
			"outputs": {
				"next": {
					"context": "$.delayed",
					"routes": [
						"mock-utils.2"
					],
					"metaName": "Next"
				}
			},
			"metaMethod": "Delay"
		},
		"mock-utils.2": {
			"type": "nodehandler://api-builder-plugin-mock-utils/mock-utils",
			"name": "Random return code",
			"method": "returnCode",
			"parameters": [
				{
					"name": "inputCodes",
					"type": "array",
					"value": "[\n  {\"code\": \"200\", \"priority\": \"15\"}, \n  {\"code\": \"201\", \"priority\": \"15\"},\n  {\"code\": \"403\", \"priority\": \"1\"},\n  {\"code\": \"404\", \"priority\": \"1\"},\n  {\"code\": \"500\", \"priority\": \"1\"},\n  {\"code\": \"504\", \"priority\": \"1\"},\n  {\"code\": \"400\", \"priority\": \"1\"}\n]",
					"metaName": "Input Codes",
					"metaDescription": "An array of possible return codes (e.g. [{\"code\": \"200\", \"priority\": \"10\"}, {\"code\": \"201\", \"priority\": \"5\"}, ...]). Return codes given at the beginning are returned more often"
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"condition.1"
					],
					"context": "$.returnCode",
					"metaName": "Next"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Random return code"
		}
	}
}